---
import Layout from "../layouts/Layout.astro";
---

<Layout title="Générateur">
    <main class="container mx-auto p-6">
        <h1 class="text-2xl font-bold mb-6">Générateur</h1>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div class="card bg-base-100 shadow p-4">
                <h2 class="text-lg font-semibold">Code généré</h2>
                <pre
                    id="svg-output"
                    class="rounded p-3 bg-base-200 overflow-auto h-72 mt-4"><code /></pre>
            </div>

            <div class="card bg-base-100 shadow p-4">
                <h2 class="text-lg font-semibold">SVG</h2>
                <div
                    id="svg-container"
                    class="mt-4 flex items-center justify-center bg-white rounded h-72 p-4"
                >
                </div>
            </div>
        </div>

        <div class="card bg-base-100 shadow p-4 mt-6">
            <h2 class="text-lg font-semibold">Entrez le prompt</h2>
            <textarea
                id="user-prompt"
                class="textarea textarea-bordered w-full h-40 mt-4"
                placeholder="Tapez votre prompt ici..."></textarea>
            <div class="mt-4 flex gap-2">
                <button id="generate-button" class="btn btn-primary"
                    >Générer</button
                >
            </div>
        </div>

        <div>
            <button class="btn btn-secondary m-2" id="edit-button">Edit</button>
        </div>
    </main>
</Layout>

<script>
    //@ts-nocheck

    async function generateSVG(prompt) {
        console.log("Generating SVG for prompt:", prompt);
        const res = await fetch("/api/generateSVG", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(prompt ),
        });
        const data = await res.json();
        return data.svg;
    }

    async function handleSubmit() {
        let prompt = "";
        let aiResponse = "";
        const promptElement = document.getElementById("user-prompt");
        prompt = promptElement ? promptElement.value : "";
        console.log("submitted: ", prompt);
        // Réinitialiser la liste des prompts
        promptList.length = 0;
        promptList.push({ role: "user", content: prompt });
        const svgContainer = document.getElementById("svg-container");
        // Afficher un spinner
        svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
        generateButton.disabled = true;
        editButton.disabled = true;
        let svgOutput = document.getElementById("svg-output");
        // Appeler la fonction pour générer le SVG
        aiResponse = await generateSVG(promptList);
        // Extraire le SVG de la réponse
        const svgMatch = aiResponse.content.match(/<svg[\s\S]*?<\/svg>/i);
        aiResponse.content = svgMatch ? svgMatch[0] : "";
        console.log("svgCode: ", aiResponse.content);
        // Ajouter la réponse de l'IA à la liste des prompts
        promptList.push(aiResponse);
        // Afficher le SVG généré
        svgOutput.textContent = aiResponse.content;
        svgContainer.innerHTML = aiResponse.content;
        // Réactiver les boutons
        generateButton.disabled = false;
        editButton.disabled = false;
    }

    const generateButton = document.getElementById("generate-button");
    if (generateButton) {
        generateButton.addEventListener("click", handleSubmit);
    }

    let promptList = [];

    const editButton = document.getElementById("edit-button");

    async function handleEdit() {
        let prompt = "";
        let aiResponse = "";
        const promptElement = document.getElementById("user-prompt");
        prompt = promptElement ? promptElement.value : "";
        console.log("Prompt soumis : ", prompt);
        // Ajout du prompt de l'utilisateur à la liste
        promptList.push({ role: "user", content: prompt });
        const svgContainer = document.getElementById("svg-container");
        // Afficher un spinner de chargement
        svgContainer.innerHTML += `<span class="loading loading-ring loading-xl"></span>`;
        generateButton.disabled = true;
        editButton.disabled = true;
        let svgOutput = document.getElementById("svg-output");
        // Appeler la fonction pour générer le SVG
        aiResponse = await generateSVG(promptList);
        // Extraire le SVG de la réponse
        const svgMatch = aiResponse.content.match(/<svg[\s\S]*?<\/svg>/i);
        aiResponse.content = svgMatch ? svgMatch[0] : "";
        console.log("Code SVG généré : ", aiResponse.content);
        // Ajouter la réponse de l'IA à la liste des prompts
        promptList.push(aiResponse);
        // Afficher le SVG généré
        svgOutput.textContent = aiResponse.content;
        svgContainer.innerHTML = aiResponse.content;
        // Réactiver les boutons
        generateButton.disabled = false;
        editButton.disabled = false;
        console.log("Historique des prompts : ", promptList);
    }

    if (editButton) {
        editButton.addEventListener("click", handleEdit);
    }
</script>
